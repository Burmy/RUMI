{"ast":null,"code":"var _jsxFileName = \"/Users/alanchuang/Desktop/SFSU/Fall 2021/CSC 648 SE/csc648-fa21-02-team01/application/rumi/frontend/src/Components/Forms/Registeration.js\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport React from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registeration = () => {\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\"\n  }; //Yup npm package used to do form validation\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3).max(15).required(\"✖ You must create a Username\").matches(/^[a-zA-Z]+/g, \"✖ Username must start with a character (a-z or A-Z)\"),\n    email: Yup.string().required(\"✖ You must enter an Email\").email(\"Email must be valid\"),\n    password1: Yup.string().required(\"✖ You must enter a Password\").matches(/^(?=.*[A-Z])(?=.*[0-9])(?=.*[(/*-+!@#$^&*)])/g, \"✖ Must contain at least 1 upper case letter and 1 number and 1 of the following special characters ( / * - + ! @ # $ ^ & * ).\"),\n    password2: Yup.string().required(\"✖ You must enter a Password\").oneOf([Yup.ref(\"password1\"), null], \"✖ Passwords must match\")\n  });\n\n  const onSubmit = data => {// Axios.post(\"http://localhost:3001/???????\", data).then((response) => {\n    //     console.log(\"IT WORKED\");\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"reg-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-heading\",\n          children: \"Join Us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-input\",\n          name: \"username\",\n          placeholder: \"Enter Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"form-error\",\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-input\",\n          name: \"email\",\n          placeholder: \"Enter Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"form-error\",\n          name: \"email\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-input\",\n          type: \"password\",\n          name: \"password1\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"form-error\",\n          name: \"password1\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-input\",\n          type: \"password\",\n          name: \"password2\",\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"form-error\",\n          name: \"password2\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-input-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-input-login\",\n          children: [\"Already have an account? Login\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"login-link\",\n            to: \"/login\",\n            children: \"here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Registeration;\nexport default Registeration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registeration\");","map":{"version":3,"sources":["/Users/alanchuang/Desktop/SFSU/Fall 2021/CSC 648 SE/csc648-fa21-02-team01/application/rumi/frontend/src/Components/Forms/Registeration.js"],"names":["Formik","Form","Field","ErrorMessage","Yup","Link","Axios","React","Registeration","initialValues","username","email","password1","password2","validationSchema","object","shape","string","min","max","required","matches","oneOf","ref","onSubmit","data"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport React from \"react\";\nimport \"./Form.css\";\n\nconst Registeration = () => {\n    const initialValues = {\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    };\n\n    //Yup npm package used to do form validation\n    const validationSchema = Yup.object().shape({\n        username: Yup.string()\n            .min(3)\n            .max(15)\n            .required(\"✖ You must create a Username\")\n            .matches(/^[a-zA-Z]+/g, \"✖ Username must start with a character (a-z or A-Z)\"),\n        email: Yup.string().required(\"✖ You must enter an Email\").email(\"Email must be valid\"),\n        password1: Yup.string()\n            .required(\"✖ You must enter a Password\")\n            .matches(\n                /^(?=.*[A-Z])(?=.*[0-9])(?=.*[(/*-+!@#$^&*)])/g,\n                \"✖ Must contain at least 1 upper case letter and 1 number and 1 of the following special characters ( / * - + ! @ # $ ^ & * ).\"\n            ),\n        password2: Yup.string()\n            .required(\"✖ You must enter a Password\")\n            .oneOf([Yup.ref(\"password1\"), null], \"✖ Passwords must match\"),\n    });\n\n    const onSubmit = (data) => {\n        // Axios.post(\"http://localhost:3001/???????\", data).then((response) => {\n        //     console.log(\"IT WORKED\");\n        // });\n    };\n    return (\n        <div className=\"form-container\">\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n                <Form className=\"reg-card\">\n                    <p className=\"form-heading\">Join Us!</p>\n                    <Field className=\"form-input\" name=\"username\" placeholder=\"Enter Your Username\" />\n                    <ErrorMessage className=\"form-error\" name=\"username\" component=\"span\" />\n\n                    <Field className=\"form-input\" name=\"email\" placeholder=\"Enter Your Email\" />\n                    <ErrorMessage className=\"form-error\" name=\"email\" component=\"span\" />\n\n                    <Field className=\"form-input\" type=\"password\" name=\"password1\" placeholder=\"Enter Password\" />\n                    <ErrorMessage className=\"form-error\" name=\"password1\" component=\"span\" />\n\n                    <Field className=\"form-input\" type=\"password\" name=\"password2\" placeholder=\"Confirm Password\" />\n                    <ErrorMessage className=\"form-error\" name=\"password2\" component=\"span\" />\n                    <button className=\"form-input-btn\" type=\"submit\">\n                        Submit\n                    </button>\n                    <p className=\"form-input-login\">\n                        Already have an account? Login{\" \"}\n                        <Link className=\"login-link\" to=\"/login\">\n                            here.\n                        </Link>\n                    </p>\n                </Form>\n            </Formik>\n        </div>\n    );\n};\n\nexport default Registeration;\n"]},"metadata":{},"sourceType":"module"}